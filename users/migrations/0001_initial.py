# Generated by Django 2.2.2 on 2019-06-15 09:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import users.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=True, verbose_name='staff')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', users.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserRoles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=50)),
                ('level', models.IntegerField()),
            ],
            options={
                'verbose_name': 'user_roles',
                'verbose_name_plural': 'users_roles',
            },
        ),
        migrations.CreateModel(
            name='BankDetails',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='bank_user', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('account_number', models.CharField(max_length=20)),
                ('ifsc', models.CharField(max_length=20)),
                ('bank_name', models.CharField(max_length=40)),
                ('branch_name', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name': 'account_detail',
                'verbose_name_plural': 'account_details',
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_type', models.CharField(choices=[('PERMANENT', 'Permanent'), ('RESIDENTIAL', 'Residential')], max_length=11)),
                ('house_number', models.CharField(max_length=20)),
                ('street_name', models.CharField(max_length=20)),
                ('locality', models.CharField(max_length=20)),
                ('city', models.CharField(max_length=20)),
                ('pincode', models.CharField(max_length=10)),
                ('state', models.CharField(max_length=20)),
                ('nearby', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'address',
            },
        ),
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('designation', models.CharField(max_length=100)),
                ('contact', models.CharField(blank=True, max_length=20)),
                ('emergency_contact', models.CharField(blank=True, max_length=20)),
                ('date_of_birth', models.DateField(blank=True)),
                ('aadhaar_number', models.CharField(blank=True, max_length=20)),
                ('pan_number', models.CharField(blank=True, max_length=20)),
                ('personal_mail_id', models.EmailField(blank=True, max_length=254)),
                ('reporting_manager', models.ForeignKey(on_delete=False, related_name='reporting_manager', to=settings.AUTH_USER_MODEL)),
                ('role', models.ForeignKey(blank=True, on_delete=False, related_name='user_role', to='users.UserRoles')),
            ],
            options={
                'verbose_name': 'user_detail',
                'verbose_name_plural': 'users_details',
            },
        ),
    ]
